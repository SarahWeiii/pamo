import warp as wp


@wp.func
def pp_distance_grad(
    x0: wp.vec3,
    x1: wp.vec3,
    i0: int,
    i1: int,  # i0, i1 in {0, 1, 2, 3}
    dd_dx: wp.array(dtype=wp.vec3),
):
    dd_dx[i0] = wp.normalize(x0 - x1)
    dd_dx[i1] = wp.normalize(x1 - x0)


@wp.func
def ee_mollifier_grad(
    x0: wp.vec3, x1: wp.vec3, x2: wp.vec3, x3: wp.vec3, dc_dx: wp.array(dtype=wp.vec3)
):
    x01 = x0[0]
    x02 = x0[1]
    x03 = x0[2]

    x11 = x1[0]
    x12 = x1[1]
    x13 = x1[2]

    x21 = x2[0]
    x22 = x2[1]
    x23 = x2[2]

    x31 = x3[0]
    x32 = x3[1]
    x33 = x3[2]

    t2 = -x11
    t3 = -x12
    t4 = -x13
    t5 = -x31
    t6 = -x32
    t7 = -x33
    t8 = t2 + x01
    t9 = t3 + x02
    t10 = t4 + x03
    t11 = t5 + x21
    t12 = t6 + x22
    t13 = t7 + x23
    t14 = t8 * t12
    t15 = t9 * t11
    t16 = t8 * t13
    t17 = t10 * t11
    t18 = t9 * t13
    t19 = t10 * t12
    t20 = -t15
    t21 = -t17
    t22 = -t19
    t23 = t14 + t20
    t24 = t16 + t21
    t25 = t18 + t22
    t26 = t8 * t23 * 2.0
    t27 = t9 * t23 * 2.0
    t28 = t8 * t24 * 2.0
    t29 = t10 * t24 * 2.0
    t30 = t9 * t25 * 2.0
    t31 = t10 * t25 * 2.0
    t32 = t11 * t23 * 2.0
    t33 = t12 * t23 * 2.0
    t34 = t11 * t24 * 2.0
    t35 = t13 * t24 * 2.0
    t36 = t12 * t25 * 2.0
    t37 = t13 * t25 * 2.0

    # A0[0][0] = t33 + t35
    # A0[0][1] = -t32 + t37
    # A0[0][2] = -t34 - t36
    #
    # A0[0][3] = -t33 - t35
    # A0[0][4] = t32 - t37
    # A0[0][5] = t34 + t36
    #
    # A0[0][6] = -t27 - t29
    # A0[0][7] = t26 - t31
    # A0[0][8] = t28 + t30
    #
    # A0[0][9] = t27 + t29
    # A0[0][10] = -t26 + t31
    # A0[0][11] = -t28 - t30

    dc_dx[0] = wp.vec3(t33 + t35, -t32 + t37, -t34 - t36)
    dc_dx[1] = -dc_dx[0]
    dc_dx[2] = wp.vec3(-t27 - t29, t26 - t31, t28 + t30)
    dc_dx[3] = -dc_dx[2]


@wp.func
def ee_distance_grad(
    x0: wp.vec3, x1: wp.vec3, x2: wp.vec3, x3: wp.vec3, dd_dx: wp.array(dtype=wp.vec3)
):
    x01 = x0[0]
    x02 = x0[1]
    x03 = x0[2]

    x11 = x1[0]
    x12 = x1[1]
    x13 = x1[2]

    x21 = x2[0]
    x22 = x2[1]
    x23 = x2[2]

    x31 = x3[0]
    x32 = x3[1]
    x33 = x3[2]

    t2 = x01 * x12 * x23
    t3 = x01 * x13 * x22
    t4 = x02 * x11 * x23
    t5 = x02 * x13 * x21
    t6 = x03 * x11 * x22
    t7 = x03 * x12 * x21
    t8 = x01 * x12 * x33
    t9 = x01 * x13 * x32
    t10 = x02 * x11 * x33
    t11 = x02 * x13 * x31
    t12 = x03 * x11 * x32
    t13 = x03 * x12 * x31
    t14 = x01 * x22 * x33
    t15 = x01 * x23 * x32
    t16 = x02 * x21 * x33
    t17 = x02 * x23 * x31
    t18 = x03 * x21 * x32
    t19 = x03 * x22 * x31
    t20 = x11 * x22 * x33
    t21 = x11 * x23 * x32
    t22 = x12 * x21 * x33
    t23 = x12 * x23 * x31
    t24 = x13 * x21 * x32
    t25 = x13 * x22 * x31
    t26 = -x11
    t27 = -x12
    t28 = -x13
    t29 = -x21
    t30 = -x22
    t31 = -x23
    t32 = -x31
    t33 = -x32
    t34 = -x33
    t35 = t26 + x01
    t36 = t27 + x02
    t37 = t28 + x03
    t38 = t29 + x01
    t39 = t30 + x02
    t40 = t31 + x03
    t41 = t32 + x21
    t42 = t33 + x22
    t43 = t34 + x23
    t44 = -t3
    t45 = -t4
    t46 = -t7
    t47 = -t8
    t48 = -t11
    t49 = -t12
    t50 = -t15
    t51 = -t16
    t52 = -t19
    t53 = -t20
    t54 = -t23
    t55 = -t24
    t56 = t35 * t42
    t57 = t36 * t41
    t58 = t35 * t43
    t59 = t37 * t41
    t60 = t36 * t43
    t61 = t37 * t42
    t108 = (
        t2
        + t5
        + t6
        + t9
        + t10
        + t13
        + t14
        + t17
        + t18
        + t21
        + t22
        + t25
        + t44
        + t45
        + t46
        + t47
        + t48
        + t49
        + t50
        + t51
        + t52
        + t53
        + t54
        + t55
    )
    t62 = -t57
    t63 = -t59
    t64 = -t61
    t65 = t56 + t62
    t66 = t58 + t63
    t67 = t60 + t64
    t68 = t65 * t65
    t69 = t66 * t66
    t70 = t67 * t67
    t71 = t35 * t65 * 2.0
    t72 = t36 * t65 * 2.0
    t73 = t35 * t66 * 2.0
    t74 = t37 * t66 * 2.0
    t75 = t36 * t67 * 2.0
    t76 = t37 * t67 * 2.0
    t77 = t41 * t65 * 2.0
    t78 = t42 * t65 * 2.0
    t79 = t41 * t66 * 2.0
    t80 = t43 * t66 * 2.0
    t81 = t42 * t67 * 2.0
    t82 = t43 * t67 * 2.0
    t83 = -t76
    t84 = -t82
    t85 = t72 + t74
    t86 = t73 + t75
    t87 = t78 + t80
    t88 = t79 + t81
    t91 = t68 + t69 + t70
    t89 = t71 + t83
    t90 = t77 + t84
    t92 = 1.0 / wp.sqrt(t91)
    t93 = t92 * t92 * t92
    t94 = t35 * t39 * t92
    t95 = t36 * t38 * t92
    t96 = t35 * t40 * t92
    t97 = t37 * t38 * t92
    t98 = t36 * t40 * t92
    t99 = t37 * t39 * t92
    t100 = t38 * t42 * t92
    t101 = t39 * t41 * t92
    t102 = t38 * t43 * t92
    t103 = t40 * t41 * t92
    t104 = t39 * t43 * t92
    t105 = t40 * t42 * t92
    t109 = t65 * t92
    t110 = t66 * t92
    t111 = t67 * t92
    t132 = t92 * t108
    t106 = -t95
    t107 = -t100
    t112 = (t40 * t65 * t85 * t93) / 2.0
    t113 = (t39 * t66 * t85 * t93) / 2.0
    t114 = (t38 * t67 * t85 * t93) / 2.0
    t115 = (t40 * t65 * t86 * t93) / 2.0
    t116 = (t39 * t66 * t86 * t93) / 2.0
    t117 = (t38 * t67 * t86 * t93) / 2.0
    t118 = (t40 * t65 * t87 * t93) / 2.0
    t119 = (t39 * t66 * t87 * t93) / 2.0
    t120 = (t38 * t67 * t87 * t93) / 2.0
    t121 = (t40 * t65 * t88 * t93) / 2.0
    t122 = (t39 * t66 * t88 * t93) / 2.0
    t123 = (t38 * t67 * t88 * t93) / 2.0
    t124 = (t40 * t65 * t89 * t93) / 2.0
    t125 = (t39 * t66 * t89 * t93) / 2.0
    t126 = (t38 * t67 * t89 * t93) / 2.0
    t128 = (t40 * t65 * t90 * t93) / 2.0
    t129 = (t39 * t66 * t90 * t93) / 2.0
    t130 = (t38 * t67 * t90 * t93) / 2.0
    t133 = wp.select(t132 < 0.0, 1.0, -1.0)
    t127 = -t116
    t131 = -t122

    # A0[0][0] = t133 * (t104 - t105 - t111 + t118 - t119 + t120)
    # A0[0][1] = -t133 * (t102 - t103 - t110 + t128 - t129 + t130)
    # A0[0][2] = -t133 * (t101 + t107 + t109 + t121 + t123 + t131)
    # A0[0][3] = -t133 * (t104 - t105 + t118 - t119 + t120)
    # A0[0][4] = t133 * (t102 - t103 + t128 - t129 + t130)
    # A0[0][5] = t133 * (t101 + t107 + t121 + t123 + t131)
    # A0[0][6] = t133 * (t98 - t99 + t111 - t112 + t113 - t114)
    # A0[0][7] = -t133 * (t96 - t97 + t110 - t124 + t125 - t126)
    # A0[0][8] = t133 * (t94 + t106 + t109 + t115 + t117 + t127)
    # A0[0][9] = t133 * (-t98 + t99 + t112 - t113 + t114)
    # A0[0][10] = -t133 * (-t96 + t97 + t124 - t125 + t126)
    # A0[0][11] = -t133 * (t94 + t106 + t115 + t117 + t127)

    dd_dx[0] = wp.vec3(
        t133 * (t104 - t105 - t111 + t118 - t119 + t120),
        -t133 * (t102 - t103 - t110 + t128 - t129 + t130),
        -t133 * (t101 + t107 + t109 + t121 + t123 + t131),
    )
    dd_dx[1] = wp.vec3(
        -t133 * (t104 - t105 + t118 - t119 + t120),
        t133 * (t102 - t103 + t128 - t129 + t130),
        t133 * (t101 + t107 + t121 + t123 + t131),
    )
    dd_dx[2] = wp.vec3(
        t133 * (t98 - t99 + t111 - t112 + t113 - t114),
        -t133 * (t96 - t97 + t110 - t124 + t125 - t126),
        t133 * (t94 + t106 + t109 + t115 + t117 + t127),
    )
    dd_dx[3] = wp.vec3(
        t133 * (-t98 + t99 + t112 - t113 + t114),
        -t133 * (-t96 + t97 + t124 - t125 + t126),
        -t133 * (t94 + t106 + t115 + t117 + t127),
    )


@wp.func
def pt_distance_grad(
    x0: wp.vec3, x1: wp.vec3, x2: wp.vec3, x3: wp.vec3, dd_dx: wp.array(dtype=wp.vec3)
):
    x01 = x0[0]
    x02 = x0[1]
    x03 = x0[2]

    x11 = x1[0]
    x12 = x1[1]
    x13 = x1[2]

    x21 = x2[0]
    x22 = x2[1]
    x23 = x2[2]

    x31 = x3[0]
    x32 = x3[1]
    x33 = x3[2]

    t2 = -x11
    t3 = -x12
    t4 = -x13
    t5 = -x21
    t6 = -x22
    t7 = -x23
    t8 = -x31
    t9 = -x32
    t10 = -x33
    t11 = t2 + x01
    t12 = t3 + x02
    t13 = t4 + x03
    t14 = t5 + x11
    t15 = t6 + x12
    t16 = t7 + x13
    t17 = t8 + x11
    t18 = t9 + x12
    t19 = t10 + x13
    t20 = t8 + x21
    t21 = t9 + x22
    t22 = t10 + x23
    t23 = t14 * t18
    t24 = t15 * t17
    t25 = t14 * t19
    t26 = t16 * t17
    t27 = t15 * t19
    t28 = t16 * t18
    t29 = -t24
    t30 = -t26
    t31 = -t28
    t32 = t23 + t29
    t33 = t25 + t30
    t34 = t27 + t31
    t35 = t32 * t32
    t36 = t33 * t33
    t37 = t34 * t34
    t38 = t14 * t32 * 2.0
    t39 = t15 * t32 * 2.0
    t40 = t14 * t33 * 2.0
    t41 = t16 * t33 * 2.0
    t42 = t15 * t34 * 2.0
    t43 = t17 * t32 * 2.0
    t44 = t16 * t34 * 2.0
    t45 = t18 * t32 * 2.0
    t46 = t17 * t33 * 2.0
    t47 = t19 * t33 * 2.0
    t48 = t18 * t34 * 2.0
    t49 = t20 * t32 * 2.0
    t50 = t19 * t34 * 2.0
    t51 = t21 * t32 * 2.0
    t52 = t20 * t33 * 2.0
    t53 = t22 * t33 * 2.0
    t54 = t21 * t34 * 2.0
    t55 = t22 * t34 * 2.0
    t56 = -t44
    t57 = -t50
    t58 = -t55
    t59 = t39 + t41
    t60 = t40 + t42
    t61 = t45 + t47
    t62 = t46 + t48
    t63 = t51 + t53
    t64 = t52 + t54
    t68 = t35 + t36 + t37
    t65 = t38 + t56
    t66 = t43 + t57
    t67 = t49 + t58
    t69 = 1.0 / wp.sqrt(t68)
    t70 = t69 * t69 * t69
    t71 = t13 * t32 * t69
    t72 = t12 * t33 * t69
    t73 = t11 * t34 * t69
    t74 = -t72
    t75 = t71 + t73 + t74
    t76 = wp.select(t75 < 0.0, 1.0, -1.0)

    # A0[0][0] = t34 * t69 * t76
    # A0[0][1] = -t33 * t69 * t76
    # A0[0][2] = t32 * t69 * t76
    # A0[0][3] = -t76 * (t34 * t69 + t12 * t22 * t69 - t13 * t21 * t69 + (t11 * t34 * t63 * t70) / 2.0 - (
    #             t12 * t33 * t63 * t70) / 2.0 + (t13 * t32 * t63 * t70) / 2.0)
    # A0[0][4] = t76 * (t33 * t69 + t11 * t22 * t69 - t13 * t20 * t69 + (t11 * t34 * t67 * t70) / 2.0 - (
    #             t12 * t33 * t67 * t70) / 2.0 + (t13 * t32 * t67 * t70) / 2.0)
    # A0[0][5] = -t76 * (t32 * t69 + t11 * t21 * t69 - t12 * t20 * t69 - (t11 * t34 * t64 * t70) / 2.0 + (
    #             t12 * t33 * t64 * t70) / 2.0 - (t13 * t32 * t64 * t70) / 2.0)
    # A0[0][6] = t76 * (t12 * t19 * t69 - t13 * t18 * t69 + (t11 * t34 * t61 * t70) / 2.0
    #                   - (t12 * t33 * t61 * t70) / 2.0 + (t13 * t32 * t61 * t70) / 2.0)
    # A0[0][7] = -t76 * (t11 * t19 * t69 - t13 * t17 * t69 + (t11 * t34 * t66 * t70) / 2.0
    #                    - (t12 * t33 * t66 * t70) / 2.0 + (t13 * t32 * t66 * t70) / 2.0)
    # A0[0][8] = -t76 * (-t11 * t18 * t69 + t12 * t17 * t69 + (t11 * t34 * t62 * t70) / 2.0
    #                    - (t12 * t33 * t62 * t70) / 2.0 + (t13 * t32 * t62 * t70) / 2.0)
    # A0[0][9] = -t76 * (t12 * t16 * t69 - t13 * t15 * t69 + (t11 * t34 * t59 * t70) / 2.0
    #                    - (t12 * t33 * t59 * t70) / 2.0 + (t13 * t32 * t59 * t70) / 2.0)
    # A0[0][10] = t76 * (t11 * t16 * t69 - t13 * t14 * t69 + (t11 * t34 * t65 * t70) / 2.0
    #                    - (t12 * t33 * t65 * t70) / 2.0 + (t13 * t32 * t65 * t70) / 2.0)
    # A0[0][11] = t76 * (-t11 * t15 * t69 + t12 * t14 * t69 + (t11 * t34 * t60 * t70) / 2.0
    #                    - (t12 * t33 * t60 * t70) / 2.0 + (t13 * t32 * t60 * t70) / 2.0)

    dd_dx[0] = wp.vec3(t34 * t69 * t76, -t33 * t69 * t76, t32 * t69 * t76)
    dd_dx[1] = wp.vec3(
        -t76
        * (
            t34 * t69
            + t12 * t22 * t69
            - t13 * t21 * t69
            + (t11 * t34 * t63 * t70) / 2.0
            - (t12 * t33 * t63 * t70) / 2.0
            + (t13 * t32 * t63 * t70) / 2.0
        ),
        t76
        * (
            t33 * t69
            + t11 * t22 * t69
            - t13 * t20 * t69
            + (t11 * t34 * t67 * t70) / 2.0
            - (t12 * t33 * t67 * t70) / 2.0
            + (t13 * t32 * t67 * t70) / 2.0
        ),
        -t76
        * (
            t32 * t69
            + t11 * t21 * t69
            - t12 * t20 * t69
            - (t11 * t34 * t64 * t70) / 2.0
            + (t12 * t33 * t64 * t70) / 2.0
            - (t13 * t32 * t64 * t70) / 2.0
        ),
    )
    dd_dx[2] = wp.vec3(
        t76
        * (
            t12 * t19 * t69
            - t13 * t18 * t69
            + (t11 * t34 * t61 * t70) / 2.0
            - (t12 * t33 * t61 * t70) / 2.0
            + (t13 * t32 * t61 * t70) / 2.0
        ),
        -t76
        * (
            t11 * t19 * t69
            - t13 * t17 * t69
            + (t11 * t34 * t66 * t70) / 2.0
            - (t12 * t33 * t66 * t70) / 2.0
            + (t13 * t32 * t66 * t70) / 2.0
        ),
        -t76
        * (
            -t11 * t18 * t69
            + t12 * t17 * t69
            + (t11 * t34 * t62 * t70) / 2.0
            - (t12 * t33 * t62 * t70) / 2.0
            + (t13 * t32 * t62 * t70) / 2.0
        ),
    )
    dd_dx[3] = wp.vec3(
        -t76
        * (
            t12 * t16 * t69
            - t13 * t15 * t69
            + (t11 * t34 * t59 * t70) / 2.0
            - (t12 * t33 * t59 * t70) / 2.0
            + (t13 * t32 * t59 * t70) / 2.0
        ),
        t76
        * (
            t11 * t16 * t69
            - t13 * t14 * t69
            + (t11 * t34 * t65 * t70) / 2.0
            - (t12 * t33 * t65 * t70) / 2.0
            + (t13 * t32 * t65 * t70) / 2.0
        ),
        t76
        * (
            -t11 * t15 * t69
            + t12 * t14 * t69
            + (t11 * t34 * t60 * t70) / 2.0
            - (t12 * t33 * t60 * t70) / 2.0
            + (t13 * t32 * t60 * t70) / 2.0
        ),
    )


@wp.func
def pe_distance_grad(
    x0: wp.vec3,
    x1: wp.vec3,
    x2: wp.vec3,
    i0: int,
    i1: int,
    i2: int,
    dd_dx: wp.array(dtype=wp.vec3),
):
    x01 = x0[0]
    x02 = x0[1]
    x03 = x0[2]

    x11 = x1[0]
    x12 = x1[1]
    x13 = x1[2]

    x21 = x2[0]
    x22 = x2[1]
    x23 = x2[2]

    t2 = x11 * 2.0
    t3 = x12 * 2.0
    t4 = x13 * 2.0
    t5 = x21 * 2.0
    t6 = x22 * 2.0
    t7 = x23 * 2.0
    t8 = -x11
    t9 = -x12
    t10 = -x13
    t11 = -x21
    t13 = -x22
    t15 = -x23
    t12 = -t5
    t14 = -t6
    t16 = -t7
    t17 = t8 + x01
    t18 = t9 + x02
    t19 = t10 + x03
    t20 = t11 + x01
    t21 = t13 + x02
    t22 = t15 + x03
    t23 = t11 + x11
    t24 = t13 + x12
    t25 = t15 + x13
    t26 = t2 + t12
    t27 = t3 + t14
    t28 = t4 + t16
    t29 = t23 * t23
    t30 = t24 * t24
    t31 = t25 * t25
    t32 = t17 * t21
    t33 = t18 * t20
    t34 = t17 * t22
    t35 = t19 * t20
    t36 = t18 * t22
    t37 = t19 * t21
    t38 = -t33
    t39 = -t35
    t40 = -t37
    t41 = t29 + t30 + t31
    t42 = t32 + t38
    t43 = t34 + t39
    t44 = t36 + t40
    t45 = 1.0 / wp.sqrt(t41)
    t46 = t45 * t45 * t45
    t47 = t42 * t42
    t48 = t43 * t43
    t49 = t44 * t44
    t50 = t47 + t48 + t49
    t51 = wp.sqrt(t50)
    t52 = 1.0 / t51
    t53 = (t26 * t46 * t51) / 2.0
    t54 = (t27 * t46 * t51) / 2.0
    t55 = (t28 * t46 * t51) / 2.0

    # A0[0][0] = (t45 * t52 * (t24 * t42 * 2.0 + t25 * t43 * 2.0)) / 2.0
    # A0[0][1] = t45 * t52 * (t23 * t42 * 2.0 - t25 * t44 * 2.0) * (-1.0 / 2.0)
    # A0[0][2] = t45 * t52 * (t23 * t43 * 2.0 + t24 * t44 * 2.0) * (-1.0 / 2.0)
    # A0[0][3] = -t53 - (t45 * t52 * (t21 * t42 * 2.0 + t22 * t43 * 2.0)) / 2.0
    # A0[0][4] = -t54 + (t45 * t52 * (t20 * t42 * 2.0 - t22 * t44 * 2.0)) / 2.0
    # A0[0][5] = -t55 + (t45 * t52 * (t20 * t43 * 2.0 + t21 * t44 * 2.0)) / 2.0
    # A0[0][6] = t53 + (t45 * t52 * (t18 * t42 * 2.0 + t19 * t43 * 2.0)) / 2.0
    # A0[0][7] = t54 - (t45 * t52 * (t17 * t42 * 2.0 - t19 * t44 * 2.0)) / 2.0
    # A0[0][8] = t55 - (t45 * t52 * (t17 * t43 * 2.0 + t18 * t44 * 2.0)) / 2.0

    dd_dx[i0] = wp.vec3(
        (t45 * t52 * (t24 * t42 * 2.0 + t25 * t43 * 2.0)) / 2.0,
        t45 * t52 * (t23 * t42 * 2.0 - t25 * t44 * 2.0) * (-1.0 / 2.0),
        t45 * t52 * (t23 * t43 * 2.0 + t24 * t44 * 2.0) * (-1.0 / 2.0),
    )
    dd_dx[i1] = wp.vec3(
        -t53 - (t45 * t52 * (t21 * t42 * 2.0 + t22 * t43 * 2.0)) / 2.0,
        -t54 + (t45 * t52 * (t20 * t42 * 2.0 - t22 * t44 * 2.0)) / 2.0,
        -t55 + (t45 * t52 * (t20 * t43 * 2.0 + t21 * t44 * 2.0)) / 2.0,
    )
    dd_dx[i2] = wp.vec3(
        t53 + (t45 * t52 * (t18 * t42 * 2.0 + t19 * t43 * 2.0)) / 2.0,
        t54 - (t45 * t52 * (t17 * t42 * 2.0 - t19 * t44 * 2.0)) / 2.0,
        t55 - (t45 * t52 * (t17 * t43 * 2.0 + t18 * t44 * 2.0)) / 2.0,
    )

