import warp as wp


@wp.func
def pp_distance_hessian(
        x0: wp.vec3, x1: wp.vec3,
        i0: int, i1: int,  # in {0, 1, 2, 3}
        kappa: float,
        db_dd: float,
        d2b_dd2: float,
        dd_dx: wp.array(dtype=wp.vec3),
        energy_hessian: wp.array(dtype=wp.mat33, ndim=2)
):
    x01 = x0[0]
    x02 = x0[1]
    x03 = x0[2]

    x11 = x1[0]
    x12 = x1[1]
    x13 = x1[2]
    
    energy_hessian[i1][i1] = wp.outer(dd_dx[i1], dd_dx[i1]) * d2b_dd2 * kappa

    energy_hessian[i0][i1] = -energy_hessian[i1][i1]

    energy_hessian[i1][i0] = -energy_hessian[i1][i1]

    energy_hessian[i0][i0] = energy_hessian[i1][i1]
    
    return

    t2 = x01 * x01
    t3 = x02 * x02
    t4 = x03 * x03
    t5 = x11 * x11
    t6 = x12 * x12
    t7 = x13 * x13
    t8 = x01 * x11 * 2.0
    t9 = x02 * x12 * 2.0
    t10 = x03 * x13 * 2.0
    t11 = -x11
    t12 = -x12
    t13 = -x13
    t14 = -t8
    t15 = -t9
    t16 = -t10
    t17 = t11 + x01
    t18 = t12 + x02
    t19 = t13 + x03
    t20 = t17 * t17
    t21 = t18 * t18
    t22 = t19 * t19
    t23 = t2 + t3 + t5 + t6 + t14 + t15
    t24 = t2 + t4 + t5 + t7 + t14 + t16
    t25 = t3 + t4 + t6 + t7 + t15 + t16
    t26 = t20 + t21 + t22
    t27 = 1.0 / wp.pow(t26, 3.0 / 2.0)
    t28 = t17 * t18 * t27
    t29 = t17 * t19 * t27
    t30 = t18 * t19 * t27
    t34 = t23 * t27
    t35 = t24 * t27
    t36 = t25 * t27
    t31 = -t28
    t32 = -t29
    t33 = -t30

    energy_hessian[i1][i1] = energy_hessian[i1][i1] + (wp.mat33(t36, t31, t32, t31, t35, t33, t32, t33, t34) * db_dd
                                                       + wp.outer(dd_dx[i1], dd_dx[i1]) * d2b_dd2) * kappa

    energy_hessian[i0][i1] = -energy_hessian[i1][i1]

    energy_hessian[i1][i0] = -energy_hessian[i1][i1]

    energy_hessian[i0][i0] = energy_hessian[i1][i1]


@wp.func
def pe_distance_hessian(
        x0: wp.vec3, x1: wp.vec3, x2: wp.vec3,
        i0: int, i1: int, i2: int,  # in {0, 1, 2, 3}
        kappa: float, db_dd: float, d2b_dd2: float,
        dd_dx: wp.array(dtype=wp.vec3),
        energy_hessian: wp.array(dtype=wp.mat33, ndim=2)
):
    # x0 = x[x0_id]
    x01 = x0[0]
    x02 = x0[1]
    x03 = x0[2]

    # x1 = x[x1_id]
    x11 = x1[0]
    x12 = x1[1]
    x13 = x1[2]

    # x2 = x[x2_id]
    x21 = x2[0]
    x22 = x2[1]
    x23 = x2[2]
    
    energy_hessian[i1][i1] = wp.outer(dd_dx[i1], dd_dx[i1]) * d2b_dd2 * kappa
    energy_hessian[i1][i2] = wp.outer(dd_dx[i1], dd_dx[i2]) * d2b_dd2 * kappa
    energy_hessian[i2][i2] = wp.outer(dd_dx[i2], dd_dx[i2]) * d2b_dd2 * kappa

    energy_hessian[i2][i1] = wp.transpose(energy_hessian[i1][i2])

    energy_hessian[i0][i1] = - energy_hessian[i1][i1] - energy_hessian[i2][i1]
    energy_hessian[i0][i2] = - energy_hessian[i1][i2] - energy_hessian[i2][i2]

    energy_hessian[i1][i0] = wp.transpose(energy_hessian[i0][i1])
    energy_hessian[i2][i0] = wp.transpose(energy_hessian[i0][i2])

    energy_hessian[i0][i0] = - energy_hessian[i0][i1] - energy_hessian[i0][i2]
    
    return

    t2 = x11 * 2.0
    t3 = x12 * 2.0
    t4 = x13 * 2.0
    t5 = x21 * 2.0
    t6 = x22 * 2.0
    t7 = x23 * 2.0
    t8 = -x11
    t9 = -x12
    t10 = -x13
    t11 = -x21
    t13 = -x22
    t15 = -x23
    t12 = -t5
    t14 = -t6
    t16 = -t7
    t17 = t8 + x01
    t18 = t9 + x02
    t19 = t10 + x03
    t20 = t11 + x01
    t21 = t13 + x02
    t22 = t15 + x03
    t23 = t11 + x11
    t24 = t13 + x12
    t25 = t15 + x13
    t26 = t2 + t12
    t27 = t3 + t14
    t28 = t4 + t16
    t29 = t17 * t17
    t30 = t18 * t18
    t31 = t19 * t19
    t32 = t20 * t20
    t33 = t21 * t21
    t34 = t22 * t22
    t35 = t23 * t23
    t36 = t24 * t24
    t37 = t25 * t25
    t50 = t17 * t21
    t51 = t18 * t20
    t52 = t17 * t22
    t53 = t19 * t20
    t54 = t18 * t22
    t55 = t19 * t21
    t56 = t17 * t20 * 2.0
    t62 = t18 * t21 * 2.0
    t70 = t19 * t22 * 2.0
    t38 = t29 * 2.0
    t39 = t30 * 2.0
    t40 = t31 * 2.0
    t41 = t32 * 2.0
    t42 = t33 * 2.0
    t43 = t34 * 2.0
    t45 = t26 * t26
    t47 = t27 * t27
    t49 = t28 * t28
    t57 = t50 * 2.0
    t58 = t51 * 2.0
    t59 = t50 * 4.0
    t60 = t52 * 2.0
    t61 = t51 * 4.0
    t63 = t53 * 2.0
    t64 = t52 * 4.0
    t65 = t54 * 2.0
    t66 = t53 * 4.0
    t67 = t55 * 2.0
    t68 = t54 * 4.0
    t69 = t55 * 4.0
    t89 = -t51
    t92 = -t53
    t96 = -t55
    t101 = t35 + t36 + t37
    t103 = t56 + t62
    t105 = t56 + t70
    t107 = t62 + t70
    t94 = -t61
    t98 = -t66
    t100 = -t69
    t102 = t50 + t89
    t104 = t52 + t92
    t106 = t54 + t96
    t120 = 1.0 / wp.sqrt(t101)
    t114 = t57 + t94
    t116 = t60 + t98
    t118 = t65 + t100
    t121 = t120 * t120 * t120
    t122 = t120 * t120 * t120 * t120 * t120
    t123 = t102 * t102
    t124 = t104 * t104
    t125 = t106 * t106
    t126 = t17 * t102 * 2.0
    t127 = t18 * t102 * 2.0
    t128 = t17 * t104 * 2.0
    t129 = t19 * t104 * 2.0
    t130 = t18 * t106 * 2.0
    t131 = t20 * t102 * 2.0
    t132 = t19 * t106 * 2.0
    t133 = t21 * t102 * 2.0
    t134 = t20 * t104 * 2.0
    t135 = t22 * t104 * 2.0
    t136 = t21 * t106 * 2.0
    t138 = t22 * t106 * 2.0
    t144 = -t132
    t145 = -t138
    t159 = t127 + t129
    t160 = t128 + t130
    t161 = t133 + t135
    t162 = t134 + t136
    t168 = t123 + t124 + t125
    t165 = t126 + t144
    t166 = t131 + t145
    t169 = wp.sqrt(t168)
    t170 = 1.0 / t169
    t172 = t121 * t169
    t183 = t45 * t122 * t169 * (3.0 / 4.0)
    t184 = t47 * t122 * t169 * (3.0 / 4.0)
    t185 = t49 * t122 * t169 * (3.0 / 4.0)
    t198 = t26 * t27 * t122 * t169 * (3.0 / 4.0)
    t199 = t26 * t28 * t122 * t169 * (3.0 / 4.0)
    t200 = t27 * t28 * t122 * t169 * (3.0 / 4.0)
    t171 = t170 * t170 * t170
    t173 = -t172
    t174 = t17 * t18 * t120 * t170
    t175 = t17 * t19 * t120 * t170
    t176 = t18 * t19 * t120 * t170
    t177 = t20 * t21 * t120 * t170
    t178 = t20 * t22 * t120 * t170
    t179 = t21 * t22 * t120 * t170
    t186 = -t183
    t187 = -t184
    t188 = -t185
    t201 = -t198
    t202 = -t199
    t203 = -t200
    t204 = (t103 * t120 * t170) / 2.0
    t205 = (t105 * t120 * t170) / 2.0
    t206 = (t107 * t120 * t170) / 2.0
    t214 = (t114 * t120 * t170) / 2.0
    t215 = t120 * t170 * (t58 - t59) * (-1.0 / 2.0)
    t217 = (t116 * t120 * t170) / 2.0
    t218 = t120 * t170 * (t63 - t64) * (-1.0 / 2.0)
    t220 = (t118 * t120 * t170) / 2.0
    t221 = t120 * t170 * (t67 - t68) * (-1.0 / 2.0)
    t246 = (t26 * t121 * t159 * t170) / 4.0
    t247 = (t27 * t121 * t159 * t170) / 4.0
    t248 = (t26 * t121 * t160 * t170) / 4.0
    t249 = (t28 * t121 * t159 * t170) / 4.0
    t250 = (t27 * t121 * t160 * t170) / 4.0
    t251 = (t28 * t121 * t160 * t170) / 4.0
    t252 = (t26 * t121 * t161 * t170) / 4.0
    t253 = (t27 * t121 * t161 * t170) / 4.0
    t254 = (t26 * t121 * t162 * t170) / 4.0
    t255 = (t28 * t121 * t161 * t170) / 4.0
    t256 = (t27 * t121 * t162 * t170) / 4.0
    t257 = (t28 * t121 * t162 * t170) / 4.0
    t265 = (t26 * t121 * t165 * t170) / 4.0
    t268 = (t27 * t121 * t165 * t170) / 4.0
    t271 = (t28 * t121 * t165 * t170) / 4.0
    t273 = (t26 * t121 * t166 * t170) / 4.0
    t276 = (t27 * t121 * t166 * t170) / 4.0
    t279 = (t28 * t121 * t166 * t170) / 4.0
    t189 = -t174
    t190 = -t175
    t191 = -t176
    t192 = -t177
    t193 = -t178
    t194 = -t179
    t213 = -t204
    t216 = -t205
    t219 = -t206
    t225 = -t214
    t226 = -t217
    t227 = -t220
    t264 = -t246
    t266 = -t247
    t267 = -t248
    t269 = -t249
    t270 = -t250
    t272 = -t252
    t274 = -t253
    t275 = -t254
    t277 = -t255
    t278 = -t256
    t289 = -t265
    t290 = -t271
    t291 = -t273
    t292 = -t279
    t296 = (t120 * t159 * t160 * t171) / 4.0
    t297 = (t120 * t159 * t161 * t171) / 4.0
    t298 = (t120 * t159 * t162 * t171) / 4.0
    t299 = (t120 * t160 * t161 * t171) / 4.0
    t300 = (t120 * t160 * t162 * t171) / 4.0
    t304 = (t120 * t161 * t162 * t171) / 4.0
    t311 = (t120 * t159 * t165 * t171) / 4.0
    t312 = (t120 * t160 * t165 * t171) / 4.0
    t313 = (t120 * t159 * t166 * t171) / 4.0
    t314 = (t120 * t161 * t165 * t171) / 4.0
    t317 = (t120 * t162 * t165 * t171) / 4.0
    t318 = (t120 * t160 * t166 * t171) / 4.0
    t322 = (t120 * t161 * t166 * t171) / 4.0
    t325 = (t120 * t162 * t166 * t171) / 4.0
    t338 = (t120 * t165 * t166 * t171) / 4.0
    t315 = -t298
    t316 = -t299
    t335 = -t312
    t336 = -t313
    t337 = -t314
    t342 = -t325
    t369 = t190 + t199 + t249 + t267 + t296
    t370 = t193 + t199 + t255 + t275 + t304
    t371 = t189 + t198 + t247 + t289 + t311
    t372 = t192 + t198 + t253 + t291 + t322
    t376 = t203 + t221 + t250 + t279 + t318
    t378 = t203 + t227 + t256 + t271 + t317
    t381 = t172 + t188 + t213 + t251 + t257 + t300
    t382 = t172 + t186 + t219 + t264 + t272 + t297
    t383 = t172 + t187 + t216 + t268 + t276 + t338
    t373 = t191 + t200 + t270 + t290 + t335
    t374 = t194 + t200 + t278 + t292 + t342
    t375 = t202 + t218 + t248 + t277 + t316
    t377 = t202 + t226 + t254 + t269 + t315
    t379 = t201 + t215 + t265 + t274 + t337
    t380 = t201 + t225 + t266 + t273 + t336

    energy_hessian[i1][i1] = energy_hessian[i1][i1] + (wp.mat33(t173+t183-(t120*(t161*t161)*t171)/4.0+(t120*t170*(t42+t43))/2.0+(t26*t121*t161*t170)/2.0, t372, t370, t372, t173+t184-(t120*(t166*t166)*t171)/4.0+(t120*t170*(t41+t43))/2.0-(t27*t121*t166*t170)/2.0, t374, t370, t374, t173+t185-(t120*(t162*t162)*t171)/4.0+(t120*t170*(t41+t42))/2.0-(t28*t121*t162*t170)/2.0) * db_dd
                              + wp.outer(dd_dx[i1], dd_dx[i1]) * d2b_dd2) * kappa
    energy_hessian[i1][i2] = energy_hessian[i1][i2] + (wp.mat33(t382, t379, t375, t380, t383, t376, t377, t378, t381) * db_dd
                              + wp.outer(dd_dx[i1], dd_dx[i2]) * d2b_dd2) * kappa
    energy_hessian[i2][i2] = energy_hessian[i2][i2] + (wp.mat33(t173+t183-(t120*(t159*t159)*t171)/4.0+(t120*t170*(t39+t40))/2.0+(t26*t121*t159*t170)/2.0, t371, t369, t371, t173+t184-(t120*(t165*t165)*t171)/4.0+(t120*t170*(t38+t40))/2.0-(t27*t121*t165*t170)/2.0, t373, t369, t373, t173+t185-(t120*(t160*t160)*t171)/4.0+(t120*t170*(t38+t39))/2.0-(t28*t121*t160*t170)/2.0) * db_dd
                              + wp.outer(dd_dx[i2], dd_dx[i2]) * d2b_dd2) * kappa

    energy_hessian[i2][i1] = wp.transpose(energy_hessian[i1][i2])

    energy_hessian[i0][i1] = - energy_hessian[i1][i1] - energy_hessian[i2][i1]
    energy_hessian[i0][i2] = - energy_hessian[i1][i2] - energy_hessian[i2][i2]

    energy_hessian[i1][i0] = wp.transpose(energy_hessian[i0][i1])
    energy_hessian[i2][i0] = wp.transpose(energy_hessian[i0][i2])

    energy_hessian[i0][i0] = - energy_hessian[i0][i1] - energy_hessian[i0][i2]


@wp.func
def pt_distance_hessian(
        x0: wp.vec3, x1: wp.vec3, x2: wp.vec3, x3: wp.vec3,
        kappa: float, db_dd: float, d2b_dd2: float,
        dd_dx: wp.array(dtype=wp.vec3),
        energy_hessian: wp.array(dtype=wp.mat33, ndim=2)
):
    i0 = 0
    i1 = 1
    i2 = 2
    i3 = 3

    # x0 = x[x0_id]
    x01 = x0[0]
    x02 = x0[1]
    x03 = x0[2]

    # x1 = x[x1_id]
    x11 = x1[0]
    x12 = x1[1]
    x13 = x1[2]

    # x2 = x[x2_id]
    x21 = x2[0]
    x22 = x2[1]
    x23 = x2[2]

    # x3 = x[x3_id]
    x31 = x3[0]
    x32 = x3[1]
    x33 = x3[2]
    
    energy_hessian[i1][i1] = wp.outer(dd_dx[i1], dd_dx[i1]) * d2b_dd2 * kappa
    energy_hessian[i1][i2] = wp.outer(dd_dx[i1], dd_dx[i2]) * d2b_dd2 * kappa
    energy_hessian[i1][i3] = wp.outer(dd_dx[i1], dd_dx[i3]) * d2b_dd2 * kappa
    energy_hessian[i2][i2] = wp.outer(dd_dx[i2], dd_dx[i2]) * d2b_dd2 * kappa
    energy_hessian[i2][i3] = wp.outer(dd_dx[i2], dd_dx[i3]) * d2b_dd2 * kappa
    energy_hessian[i3][i3] = wp.outer(dd_dx[i3], dd_dx[i3]) * d2b_dd2 * kappa

    energy_hessian[i2][i1] = wp.transpose(energy_hessian[i1][i2])
    energy_hessian[i3][i1] = wp.transpose(energy_hessian[i1][i3])
    energy_hessian[i3][i2] = wp.transpose(energy_hessian[i2][i3])

    energy_hessian[i0][i1] = - energy_hessian[i1][i1] - energy_hessian[i2][i1] - energy_hessian[i3][i1]
    energy_hessian[i0][i2] = - energy_hessian[i1][i2] - energy_hessian[i2][i2] - energy_hessian[i3][i2]
    energy_hessian[i0][i3] = - energy_hessian[i1][i3] - energy_hessian[i2][i3] - energy_hessian[i3][i3]

    energy_hessian[i1][i0] = wp.transpose(energy_hessian[i0][i1])
    energy_hessian[i2][i0] = wp.transpose(energy_hessian[i0][i2])
    energy_hessian[i3][i0] = wp.transpose(energy_hessian[i0][i3])

    energy_hessian[i0][i0] = - energy_hessian[i0][i1] - energy_hessian[i0][i2] - energy_hessian[i0][i3]
    
    return

    t2 = x01 * x12
    t3 = x02 * x11
    t4 = x01 * x13
    t5 = x03 * x11
    t6 = x02 * x13
    t7 = x03 * x12
    t8 = x01 * x22
    t9 = x02 * x21
    t10 = x01 * x23
    t11 = x03 * x21
    t12 = x02 * x23
    t13 = x03 * x22
    t14 = x01 * x32
    t15 = x02 * x31
    t16 = x11 * x22
    t17 = x12 * x21
    t18 = x01 * x33
    t19 = x03 * x31
    t20 = x11 * x23
    t21 = x13 * x21
    t22 = x02 * x33
    t23 = x03 * x32
    t24 = x12 * x23
    t25 = x13 * x22
    t26 = x11 * x32
    t27 = x12 * x31
    t28 = x11 * x33
    t29 = x13 * x31
    t30 = x12 * x33
    t31 = x13 * x32
    t32 = x21 * x32
    t33 = x22 * x31
    t34 = x21 * x33
    t35 = x23 * x31
    t36 = x22 * x33
    t37 = x23 * x32
    t62 = -x11
    t63 = -x12
    t64 = -x13
    t65 = -x21
    t66 = -x22
    t67 = -x23
    t68 = -x31
    t69 = -x32
    t70 = -x33
    t38 = t2 * x23
    t39 = t4 * x22
    t40 = t3 * x23
    t41 = t6 * x21
    t42 = t5 * x22
    t43 = t7 * x21
    t44 = t2 * x33
    t45 = t4 * x32
    t46 = t3 * x33
    t47 = t6 * x31
    t48 = t5 * x32
    t49 = t7 * x31
    t50 = t8 * x33
    t51 = t10 * x32
    t52 = t9 * x33
    t53 = t12 * x31
    t54 = t11 * x32
    t55 = t13 * x31
    t56 = t16 * x33
    t57 = t20 * x32
    t58 = t17 * x33
    t59 = t24 * x31
    t60 = t21 * x32
    t61 = t25 * x31
    t71 = -t3
    t72 = -t5
    t73 = -t7
    t74 = -t8
    t75 = -t9
    t76 = -t10
    t77 = -t11
    t78 = -t12
    t79 = -t13
    t80 = -t14
    t81 = -t17
    t82 = -t18
    t83 = -t21
    t84 = -t22
    t85 = -t25
    t87 = -t27
    t89 = -t29
    t91 = -t31
    t92 = -t33
    t93 = -t35
    t94 = -t37
    t95 = t62 + x01
    t96 = t63 + x02
    t97 = t64 + x03
    t98 = t65 + x01
    t99 = t66 + x02
    t100 = t67 + x03
    t101 = t68 + x01
    t102 = t65 + x11
    t103 = t69 + x02
    t104 = t66 + x12
    t105 = t70 + x03
    t106 = t67 + x13
    t107 = t68 + x11
    t108 = t69 + x12
    t109 = t70 + x13
    t110 = t68 + x21
    t111 = t69 + x22
    t112 = t70 + x23
    t113 = -t39
    t114 = -t40
    t115 = -t43
    t116 = -t44
    t117 = -t47
    t118 = -t48
    t119 = -t51
    t120 = -t52
    t121 = -t55
    t122 = -t56
    t123 = -t59
    t124 = -t60
    t125 = t102 * t102
    t126 = t104 * t104
    t127 = t106 * t106
    t128 = t107 * t107
    t129 = t108 * t108
    t130 = t109 * t109
    t131 = t110 * t110
    t132 = t111 * t111
    t133 = t112 * t112
    t143 = t102 * t108
    t144 = t104 * t107
    t145 = t102 * t109
    t146 = t106 * t107
    t147 = t104 * t109
    t148 = t106 * t108
    t149 = t102 * t107 * 2.0
    t155 = t104 * t108 * 2.0
    t163 = t106 * t109 * 2.0
    t164 = t102 * t110 * 2.0
    t165 = t102 * t111 * 2.0
    t166 = t104 * t110 * 2.0
    t167 = t102 * t112 * 2.0
    t168 = t104 * t111 * 2.0
    t169 = t106 * t110 * 2.0
    t170 = t104 * t112 * 2.0
    t171 = t106 * t111 * 2.0
    t172 = t106 * t112 * 2.0
    t173 = t107 * t110 * 2.0
    t174 = t107 * t111 * 2.0
    t175 = t108 * t110 * 2.0
    t176 = t107 * t112 * 2.0
    t177 = t108 * t111 * 2.0
    t178 = t109 * t110 * 2.0
    t179 = t108 * t112 * 2.0
    t180 = t109 * t111 * 2.0
    t181 = t109 * t112 * 2.0
    t194 = t2 + t9 + t16 + t71 + t74 + t81
    t195 = t4 + t11 + t20 + t72 + t76 + t83
    t196 = t6 + t13 + t24 + t73 + t78 + t85
    t197 = t2 + t15 + t26 + t71 + t80 + t87
    t198 = t4 + t19 + t28 + t72 + t82 + t89
    t199 = t6 + t23 + t30 + t73 + t84 + t91
    t200 = t8 + t15 + t32 + t75 + t80 + t92
    t201 = t10 + t19 + t34 + t77 + t82 + t93
    t202 = t12 + t23 + t36 + t79 + t84 + t94
    t134 = t125 * 2.0
    t135 = t126 * 2.0
    t136 = t127 * 2.0
    t137 = t128 * 2.0
    t138 = t129 * 2.0
    t139 = t130 * 2.0
    t140 = t131 * 2.0
    t141 = t132 * 2.0
    t142 = t133 * 2.0
    t150 = t143 * 2.0
    t151 = t144 * 2.0
    t152 = t143 * 4.0
    t153 = t145 * 2.0
    t154 = t144 * 4.0
    t156 = t146 * 2.0
    t157 = t145 * 4.0
    t158 = t147 * 2.0
    t159 = t146 * 4.0
    t160 = t148 * 2.0
    t161 = t147 * 4.0
    t162 = t148 * 4.0
    t182 = -t144
    t185 = -t146
    t189 = -t148
    t207 = t149 + t155
    t209 = t149 + t163
    t211 = t155 + t163
    t212 = t164 + t168
    t213 = t164 + t172
    t214 = t168 + t172
    t215 = t173 + t177
    t216 = t173 + t181
    t217 = t177 + t181
    t273 = t38 + t41 + t42 + t45 + t46 + t49 + t50 + t53 + t54 + t57 + t58 + t61 + t113 + t114 + t115 + t116 + t117 + t118 + t119 + t120 + t121 + t122 + t123 + t124
    t183 = -t150
    t184 = -t151
    t186 = -t153
    t187 = -t154
    t188 = -t156
    t190 = -t158
    t191 = -t159
    t192 = -t160
    t193 = -t162
    t206 = t143 + t182
    t208 = t145 + t185
    t210 = t147 + t189
    t274 = wp.abs(t273)
    t275 = (t273 / wp.abs(t273))
    t218 = t150 + t187
    t220 = t153 + t191
    t222 = t158 + t193
    t224 = t206 * t206
    t225 = t208 * t208
    t226 = t210 * t210
    t227 = t102 * t206 * 2.0
    t228 = t104 * t206 * 2.0
    t229 = t102 * t208 * 2.0
    t230 = t106 * t208 * 2.0
    t231 = t104 * t210 * 2.0
    t232 = t107 * t206 * 2.0
    t233 = t106 * t210 * 2.0
    t234 = t108 * t206 * 2.0
    t235 = t107 * t208 * 2.0
    t236 = t109 * t208 * 2.0
    t237 = t108 * t210 * 2.0
    t238 = t110 * t206 * 2.0
    t239 = t109 * t210 * 2.0
    t240 = t111 * t206 * 2.0
    t241 = t110 * t208 * 2.0
    t242 = t112 * t208 * 2.0
    t243 = t111 * t210 * 2.0
    t244 = t112 * t210 * 2.0
    t248 = t151 + t166 + t183
    t249 = t150 + t165 + t184
    t250 = t156 + t169 + t186
    t251 = t153 + t167 + t188
    t252 = t151 + t175 + t183
    t253 = t150 + t174 + t184
    t254 = t160 + t171 + t190
    t255 = t158 + t170 + t192
    t256 = t156 + t178 + t186
    t257 = t153 + t176 + t188
    t258 = t160 + t180 + t190
    t259 = t158 + t179 + t192
    t245 = -t233
    t246 = -t239
    t247 = -t244
    t260 = t228 + t230
    t261 = t229 + t231
    t262 = t234 + t236
    t263 = t235 + t237
    t264 = t240 + t242
    t265 = t241 + t243
    t269 = t224 + t225 + t226
    t266 = t227 + t245
    t267 = t232 + t246
    t268 = t238 + t247
    t270 = 1.0 / wp.sqrt(t269)
    t271 = t270 * t270 * t270
    t272 = t270 * t270 * t270 * t270 * t270
    t276 = t95 * t270 * t275
    t277 = t96 * t270 * t275
    t278 = t97 * t270 * t275
    t279 = t98 * t270 * t275
    t280 = t99 * t270 * t275
    t281 = t100 * t270 * t275
    t282 = t101 * t270 * t275
    t284 = t103 * t270 * t275
    t286 = t105 * t270 * t275
    t294 = -t276
    t295 = -t277
    t296 = -t278
    t297 = -t279
    t298 = -t280
    t299 = -t281
    t300 = -t282
    t302 = -t284
    t304 = -t286
    t312 = t102 * t104 * t271 * t274
    t313 = t102 * t106 * t271 * t274
    t314 = t104 * t106 * t271 * t274
    t315 = t107 * t108 * t271 * t274
    t316 = t107 * t109 * t271 * t274
    t317 = t108 * t109 * t271 * t274
    t318 = t110 * t111 * t271 * t274
    t319 = t110 * t112 * t271 * t274
    t320 = t111 * t112 * t271 * t274
    t321 = (t207 * t271 * t274) / 2.0
    t322 = (t209 * t271 * t274) / 2.0
    t323 = (t211 * t271 * t274) / 2.0
    t324 = (t212 * t271 * t274) / 2.0
    t325 = (t213 * t271 * t274) / 2.0
    t326 = (t214 * t271 * t274) / 2.0
    t327 = (t215 * t271 * t274) / 2.0
    t328 = (t216 * t271 * t274) / 2.0
    t329 = (t217 * t271 * t274) / 2.0
    t330 = (t218 * t271 * t274) / 2.0
    t332 = (t220 * t271 * t274) / 2.0
    t334 = (t222 * t271 * t274) / 2.0
    t339 = (t271 * t274 * (t151 - t152)) / 2.0
    t340 = (t271 * t274 * (t156 - t157)) / 2.0
    t341 = (t271 * t274 * (t160 - t161)) / 2.0
    t342 = (t248 * t271 * t274) / 2.0
    t343 = (t249 * t271 * t274) / 2.0
    t344 = (t250 * t271 * t274) / 2.0
    t345 = (t251 * t271 * t274) / 2.0
    t346 = (t252 * t271 * t274) / 2.0
    t347 = (t253 * t271 * t274) / 2.0
    t348 = (t254 * t271 * t274) / 2.0
    t349 = (t255 * t271 * t274) / 2.0
    t350 = (t256 * t271 * t274) / 2.0
    t351 = (t257 * t271 * t274) / 2.0
    t352 = (t258 * t271 * t274) / 2.0
    t353 = (t259 * t271 * t274) / 2.0
    t360 = (t194 * t260 * t271 * t275) / 2.0
    t361 = (t195 * t260 * t271 * t275) / 2.0
    t362 = (t195 * t261 * t271 * t275) / 2.0
    t363 = (t196 * t261 * t271 * t275) / 2.0
    t364 = (t194 * t262 * t271 * t275) / 2.0
    t365 = (t194 * t263 * t271 * t275) / 2.0
    t366 = (t195 * t262 * t271 * t275) / 2.0
    t367 = (t195 * t263 * t271 * t275) / 2.0
    t368 = (t196 * t262 * t271 * t275) / 2.0
    t369 = (t196 * t263 * t271 * t275) / 2.0
    t370 = (t197 * t260 * t271 * t275) / 2.0
    t371 = (t194 * t264 * t271 * t275) / 2.0
    t372 = (t197 * t261 * t271 * t275) / 2.0
    t373 = (t194 * t265 * t271 * t275) / 2.0
    t374 = (t198 * t260 * t271 * t275) / 2.0
    t375 = (t195 * t264 * t271 * t275) / 2.0
    t376 = (t198 * t261 * t271 * t275) / 2.0
    t377 = (t195 * t265 * t271 * t275) / 2.0
    t378 = (t199 * t260 * t271 * t275) / 2.0
    t379 = (t196 * t264 * t271 * t275) / 2.0
    t380 = (t199 * t261 * t271 * t275) / 2.0
    t381 = (t196 * t265 * t271 * t275) / 2.0
    t382 = (t197 * t262 * t271 * t275) / 2.0
    t383 = (t198 * t262 * t271 * t275) / 2.0
    t384 = (t198 * t263 * t271 * t275) / 2.0
    t385 = (t199 * t263 * t271 * t275) / 2.0
    t386 = (t200 * t260 * t271 * t275) / 2.0
    t387 = (t197 * t264 * t271 * t275) / 2.0
    t388 = (t200 * t261 * t271 * t275) / 2.0
    t389 = (t197 * t265 * t271 * t275) / 2.0
    t390 = (t201 * t260 * t271 * t275) / 2.0
    t391 = (t198 * t264 * t271 * t275) / 2.0
    t392 = (t201 * t261 * t271 * t275) / 2.0
    t393 = (t198 * t265 * t271 * t275) / 2.0
    t394 = (t202 * t260 * t271 * t275) / 2.0
    t395 = (t199 * t264 * t271 * t275) / 2.0
    t396 = (t202 * t261 * t271 * t275) / 2.0
    t397 = (t199 * t265 * t271 * t275) / 2.0
    t398 = (t200 * t262 * t271 * t275) / 2.0
    t399 = (t200 * t263 * t271 * t275) / 2.0
    t400 = (t201 * t262 * t271 * t275) / 2.0
    t401 = (t201 * t263 * t271 * t275) / 2.0
    t402 = (t202 * t262 * t271 * t275) / 2.0
    t403 = (t202 * t263 * t271 * t275) / 2.0
    t405 = (t200 * t264 * t271 * t275) / 2.0
    t408 = (t201 * t264 * t271 * t275) / 2.0
    t410 = (t201 * t265 * t271 * t275) / 2.0
    t413 = (t202 * t265 * t271 * t275) / 2.0
    t426 = (t194 * t266 * t271 * t275) / 2.0
    t428 = (t196 * t266 * t271 * t275) / 2.0
    t431 = (t194 * t267 * t271 * t275) / 2.0
    t432 = (t195 * t267 * t271 * t275) / 2.0
    t435 = (t196 * t267 * t271 * t275) / 2.0
    t437 = (t197 * t266 * t271 * t275) / 2.0
    t438 = (t194 * t268 * t271 * t275) / 2.0
    t441 = (t198 * t266 * t271 * t275) / 2.0
    t442 = (t195 * t268 * t271 * t275) / 2.0
    t445 = (t199 * t266 * t271 * t275) / 2.0
    t446 = (t196 * t268 * t271 * t275) / 2.0
    t448 = (t197 * t267 * t271 * t275) / 2.0
    t450 = (t199 * t267 * t271 * t275) / 2.0
    t453 = (t200 * t266 * t271 * t275) / 2.0
    t454 = (t197 * t268 * t271 * t275) / 2.0
    t457 = (t201 * t266 * t271 * t275) / 2.0
    t458 = (t198 * t268 * t271 * t275) / 2.0
    t461 = (t202 * t266 * t271 * t275) / 2.0
    t462 = (t199 * t268 * t271 * t275) / 2.0
    t465 = (t200 * t267 * t271 * t275) / 2.0
    t466 = (t201 * t267 * t271 * t275) / 2.0
    t469 = (t202 * t267 * t271 * t275) / 2.0
    t472 = (t200 * t268 * t271 * t275) / 2.0
    t478 = (t202 * t268 * t271 * t275) / 2.0
    t510 = t260 * t261 * t272 * t274 * (3.0 / 4.0)
    t511 = t260 * t262 * t272 * t274 * (3.0 / 4.0)
    t512 = t260 * t263 * t272 * t274 * (3.0 / 4.0)
    t513 = t261 * t262 * t272 * t274 * (3.0 / 4.0)
    t514 = t261 * t263 * t272 * t274 * (3.0 / 4.0)
    t515 = t260 * t264 * t272 * t274 * (3.0 / 4.0)
    t516 = t260 * t265 * t272 * t274 * (3.0 / 4.0)
    t517 = t261 * t264 * t272 * t274 * (3.0 / 4.0)
    t518 = t262 * t263 * t272 * t274 * (3.0 / 4.0)
    t519 = t261 * t265 * t272 * t274 * (3.0 / 4.0)
    t520 = t262 * t264 * t272 * t274 * (3.0 / 4.0)
    t521 = t262 * t265 * t272 * t274 * (3.0 / 4.0)
    t522 = t263 * t264 * t272 * t274 * (3.0 / 4.0)
    t523 = t263 * t265 * t272 * t274 * (3.0 / 4.0)
    t524 = t264 * t265 * t272 * t274 * (3.0 / 4.0)
    t525 = t260 * t266 * t272 * t274 * (3.0 / 4.0)
    t527 = t261 * t266 * t272 * t274 * (3.0 / 4.0)
    t529 = t260 * t267 * t272 * t274 * (3.0 / 4.0)
    t530 = t262 * t266 * t272 * t274 * (3.0 / 4.0)
    t531 = t263 * t266 * t272 * t274 * (3.0 / 4.0)
    t532 = t261 * t267 * t272 * t274 * (3.0 / 4.0)
    t534 = t260 * t268 * t272 * t274 * (3.0 / 4.0)
    t535 = t264 * t266 * t272 * t274 * (3.0 / 4.0)
    t536 = t262 * t267 * t272 * t274 * (3.0 / 4.0)
    t540 = t265 * t266 * t272 * t274 * (3.0 / 4.0)
    t541 = t261 * t268 * t272 * t274 * (3.0 / 4.0)
    t542 = t263 * t267 * t272 * t274 * (3.0 / 4.0)
    t544 = t262 * t268 * t272 * t274 * (3.0 / 4.0)
    t545 = t264 * t267 * t272 * t274 * (3.0 / 4.0)
    t546 = t265 * t267 * t272 * t274 * (3.0 / 4.0)
    t547 = t263 * t268 * t272 * t274 * (3.0 / 4.0)
    t549 = t264 * t268 * t272 * t274 * (3.0 / 4.0)
    t551 = t265 * t268 * t272 * t274 * (3.0 / 4.0)
    t553 = t266 * t267 * t272 * t274 * (3.0 / 4.0)
    t559 = t266 * t268 * t272 * t274 * (3.0 / 4.0)
    t560 = t267 * t268 * t272 * t274 * (3.0 / 4.0)
    t336 = -t324
    t337 = -t325
    t338 = -t326
    t354 = -t346
    t355 = -t347
    t356 = -t350
    t357 = -t351
    t358 = -t352
    t359 = -t353
    t427 = -t361
    t429 = -t363
    t430 = -t364
    t433 = -t367
    t434 = -t368
    t436 = -t370
    t439 = -t373
    t440 = -t375
    t443 = -t376
    t444 = -t378
    t447 = -t381
    t449 = -t383
    t451 = -t385
    t452 = -t387
    t455 = -t388
    t456 = -t390
    t459 = -t393
    t460 = -t395
    t463 = -t396
    t464 = -t398
    t467 = -t401
    t468 = -t402
    t473 = -t408
    t479 = -t413
    t492 = -t426
    t493 = -t428
    t494 = -t432
    t495 = -t438
    t496 = -t441
    t497 = -t446
    t498 = -t448
    t499 = -t450
    t500 = -t453
    t501 = -t458
    t502 = -t461
    t503 = -t466
    t504 = -t472
    t506 = -t478
    t526 = -t510
    t528 = -t511
    t533 = -t514
    t537 = -t516
    t538 = -t517
    t539 = -t518
    t543 = -t520
    t548 = -t523
    t550 = -t524
    t552 = -t525
    t554 = -t531
    t555 = -t532
    t556 = -t534
    t557 = -t535
    t558 = -t536
    t561 = -t546
    t562 = -t547
    t563 = -t549
    t564 = -t553
    t565 = -t560
    t603 = t278 + t339 + t366 + t445 + t530
    t604 = t296 + t330 + t374 + t435 + t529
    t584 = t313 + t360 + t429 + t526
    t585 = t316 + t382 + t451 + t539
    t586 = t319 + t405 + t479 + t550
    t587 = t314 + t362 + t492 + t527
    t588 = t317 + t384 + t498 + t542
    t589 = t320 + t410 + t504 + t551
    t590 = t312 + t427 + t493 + t552
    t591 = t315 + t449 + t499 + t558
    t592 = t318 + t473 + t506 + t563
    t593 = t321 + t365 + t372 + t533
    t594 = t338 + t379 + t394 + t515
    t595 = t327 + t389 + t399 + t548
    t596 = t323 + t434 + t444 + t528
    t597 = t336 + t439 + t455 + t519
    t598 = t329 + t460 + t468 + t543
    t599 = t337 + t442 + t457 + t559
    t600 = t322 + t494 + t496 + t564
    t601 = t328 + t501 + t503 + t565
    t602 = t277 + t332 + t369 + t436 + t512
    t605 = t295 + t340 + t380 + t430 + t513
    t606 = t276 + t341 + t431 + t443 + t555
    t607 = t294 + t334 + t433 + t437 + t554
    t608 = t280 + t345 + t371 + t463 + t538
    t609 = t284 + t356 + t397 + t464 + t521
    t610 = t279 + t348 + t377 + t500 + t540
    t611 = t286 + t355 + t391 + t469 + t545
    t612 = t298 + t344 + t386 + t447 + t537
    t613 = t302 + t357 + t403 + t452 + t522
    t614 = t281 + t342 + t456 + t497 + t556
    t615 = t297 + t349 + t392 + t495 + t541
    t616 = t304 + t354 + t400 + t462 + t544
    t617 = t282 + t359 + t454 + t467 + t562
    t618 = t299 + t343 + t440 + t502 + t557
    t619 = t300 + t358 + t459 + t465 + t561

    energy_hessian[i1][i1] = energy_hessian[i1][i1] + (wp.mat33((t264*t264)*t272*t274*(3.0/4.0)-(t271*t274*(t141+t142))/2.0+t202*t264*t271*t275, t592, t586, t592, (t268*t268)*t272*t274*(3.0/4.0)-(t271*t274*(t140+t142))/2.0+t201*t268*t271*t275, t589, t586, t589, (t265*t265)*t272*t274*(3.0/4.0)-(t271*t274*(t140+t141))/2.0-t200*t265*t271*t275) * db_dd
                              + wp.outer(dd_dx[i1], dd_dx[i1]) * d2b_dd2) * kappa
    energy_hessian[i1][i2] = energy_hessian[i1][i2] + (wp.mat33(t598, t611, t613, t616, t601, t617, t609, t619, t595) * db_dd
                              + wp.outer(dd_dx[i1], dd_dx[i2]) * d2b_dd2) * kappa
    energy_hessian[i1][i3] = energy_hessian[i1][i3] + (wp.mat33(t594, t618, t608, t614, t599, t615, t612, t610, t597) * db_dd
                              + wp.outer(dd_dx[i1], dd_dx[i3]) * d2b_dd2) * kappa
    energy_hessian[i2][i2] = energy_hessian[i2][i2] + (wp.mat33((t262*t262)*t272*t274*(3.0/4.0)-(t271*t274*(t138+t139))/2.0+t199*t262*t271*t275, t591, t585, t591, (t267*t267)*t272*t274*(3.0/4.0)-(t271*t274*(t137+t139))/2.0+t198*t267*t271*t275, t588, t585, t588, (t263*t263)*t272*t274*(3.0/4.0)-(t271*t274*(t137+t138))/2.0-t197*t263*t271*t275) * db_dd
                              + wp.outer(dd_dx[i2], dd_dx[i2]) * d2b_dd2) * kappa
    energy_hessian[i2][i3] = energy_hessian[i2][i3] + (wp.mat33(t596, t603, t605, t604, t600, t606, t602, t607, t593) * db_dd
                              + wp.outer(dd_dx[i2], dd_dx[i3]) * d2b_dd2) * kappa
    energy_hessian[i3][i3] = energy_hessian[i3][i3] + (wp.mat33((t260*t260)*t272*t274*(3.0/4.0)-(t271*t274*(t135+t136))/2.0+t196*t260*t271*t275, t590, t584, t590, (t266*t266)*t272*t274*(3.0/4.0)-(t271*t274*(t134+t136))/2.0+t195*t266*t271*t275, t587, t584, t587, (t261*t261)*t272*t274*(3.0/4.0)-(t271*t274*(t134+t135))/2.0-t194*t261*t271*t275) * db_dd
                              + wp.outer(dd_dx[i3], dd_dx[i3]) * d2b_dd2) * kappa

    energy_hessian[i2][i1] = wp.transpose(energy_hessian[i1][i2])
    energy_hessian[i3][i1] = wp.transpose(energy_hessian[i1][i3])
    energy_hessian[i3][i2] = wp.transpose(energy_hessian[i2][i3])

    energy_hessian[i0][i1] = - energy_hessian[i1][i1] - energy_hessian[i2][i1] - energy_hessian[i3][i1]
    energy_hessian[i0][i2] = - energy_hessian[i1][i2] - energy_hessian[i2][i2] - energy_hessian[i3][i2]
    energy_hessian[i0][i3] = - energy_hessian[i1][i3] - energy_hessian[i2][i3] - energy_hessian[i3][i3]

    energy_hessian[i1][i0] = wp.transpose(energy_hessian[i0][i1])
    energy_hessian[i2][i0] = wp.transpose(energy_hessian[i0][i2])
    energy_hessian[i3][i0] = wp.transpose(energy_hessian[i0][i3])

    energy_hessian[i0][i0] = - energy_hessian[i0][i1] - energy_hessian[i0][i2] - energy_hessian[i0][i3]


@wp.func
def ee_distance_hessian(
        x0: wp.vec3, x1: wp.vec3, x2: wp.vec3, x3: wp.vec3,
        kappa: float, db_dd: float, d2b_dd2: float,
        dd_dx: wp.array(dtype=wp.vec3),
        energy_hessian: wp.array(dtype=wp.mat33, ndim=2)
):
    i0 = 0
    i1 = 1
    i2 = 2
    i3 = 3

    # x0 = x[x0_id]
    x01 = x0[0]
    x02 = x0[1]
    x03 = x0[2]

    # x1 = x[x1_id]
    x11 = x1[0]
    x12 = x1[1]
    x13 = x1[2]

    # x2 = x[x2_id]
    x21 = x2[0]
    x22 = x2[1]
    x23 = x2[2]

    # x3 = x[x3_id]
    x31 = x3[0]
    x32 = x3[1]
    x33 = x3[2]
    
    energy_hessian[i1][i1] = wp.outer(dd_dx[i1], dd_dx[i1]) * d2b_dd2 * kappa
    energy_hessian[i1][i2] = wp.outer(dd_dx[i1], dd_dx[i2]) * d2b_dd2 * kappa
    energy_hessian[i1][i3] = wp.outer(dd_dx[i1], dd_dx[i3]) * d2b_dd2 * kappa
    energy_hessian[i2][i1] = wp.outer(dd_dx[i2], dd_dx[i1]) * d2b_dd2 * kappa
    energy_hessian[i2][i2] = wp.outer(dd_dx[i2], dd_dx[i2]) * d2b_dd2 * kappa
    energy_hessian[i2][i3] = wp.outer(dd_dx[i2], dd_dx[i3]) * d2b_dd2 * kappa
    energy_hessian[i3][i3] = wp.outer(dd_dx[i3], dd_dx[i3]) * d2b_dd2 * kappa

    energy_hessian[i2][i1] = wp.transpose(energy_hessian[i1][i2])
    energy_hessian[i3][i1] = wp.transpose(energy_hessian[i1][i3])
    energy_hessian[i3][i2] = wp.transpose(energy_hessian[i2][i3])

    energy_hessian[i0][i1] = - energy_hessian[i1][i1] - energy_hessian[i2][i1] - energy_hessian[i3][i1]
    energy_hessian[i0][i2] = - energy_hessian[i1][i2] - energy_hessian[i2][i2] - energy_hessian[i3][i2]
    energy_hessian[i0][i3] = - energy_hessian[i1][i3] - energy_hessian[i2][i3] - energy_hessian[i3][i3]

    energy_hessian[i1][i0] = wp.transpose(energy_hessian[i0][i1])
    energy_hessian[i2][i0] = wp.transpose(energy_hessian[i0][i2])
    energy_hessian[i3][i0] = wp.transpose(energy_hessian[i0][i3])

    energy_hessian[i0][i0] = - energy_hessian[i0][i1] - energy_hessian[i0][i2] - energy_hessian[i0][i3]

    return

    t2 = x01 * x12
    t3 = x02 * x11
    t4 = x01 * x13
    t5 = x03 * x11
    t6 = x02 * x13
    t7 = x03 * x12
    t8 = x01 * x22
    t9 = x02 * x21
    t10 = x01 * x23
    t11 = x03 * x21
    t12 = x02 * x23
    t13 = x03 * x22
    t14 = x01 * x32
    t15 = x02 * x31
    t16 = x11 * x22
    t17 = x12 * x21
    t18 = x01 * x33
    t19 = x03 * x31
    t20 = x11 * x23
    t21 = x13 * x21
    t22 = x02 * x33
    t23 = x03 * x32
    t24 = x12 * x23
    t25 = x13 * x22
    t26 = x11 * x32
    t27 = x12 * x31
    t28 = x11 * x33
    t29 = x13 * x31
    t30 = x12 * x33
    t31 = x13 * x32
    t32 = x21 * x32
    t33 = x22 * x31
    t34 = x21 * x33
    t35 = x23 * x31
    t36 = x22 * x33
    t37 = x23 * x32
    t62 = -x11
    t63 = -x12
    t64 = -x13
    t65 = -x21
    t66 = -x22
    t67 = -x23
    t68 = -x31
    t69 = -x32
    t70 = -x33
    t38 = t2 * x23
    t39 = t4 * x22
    t40 = t3 * x23
    t41 = t6 * x21
    t42 = t5 * x22
    t43 = t7 * x21
    t44 = t2 * x33
    t45 = t4 * x32
    t46 = t3 * x33
    t47 = t6 * x31
    t48 = t5 * x32
    t49 = t7 * x31
    t50 = t8 * x33
    t51 = t10 * x32
    t52 = t9 * x33
    t53 = t12 * x31
    t54 = t11 * x32
    t55 = t13 * x31
    t56 = t16 * x33
    t57 = t20 * x32
    t58 = t17 * x33
    t59 = t24 * x31
    t60 = t21 * x32
    t61 = t25 * x31
    t71 = -t3
    t72 = -t5
    t73 = -t7
    t74 = -t8
    t75 = -t9
    t76 = -t10
    t77 = -t11
    t78 = -t12
    t79 = -t13
    t80 = -t14
    t81 = -t17
    t82 = -t18
    t83 = -t21
    t84 = -t22
    t85 = -t25
    t87 = -t27
    t89 = -t29
    t91 = -t31
    t92 = -t33
    t93 = -t35
    t94 = -t37
    t95 = t62 + x01
    t96 = t63 + x02
    t97 = t64 + x03
    t98 = t65 + x01
    t99 = t66 + x02
    t100 = t67 + x03
    t101 = t68 + x01
    t103 = t69 + x02
    t105 = t70 + x03
    t110 = t68 + x21
    t111 = t69 + x22
    t112 = t70 + x23
    t113 = -t39
    t114 = -t40
    t115 = -t43
    t116 = -t44
    t117 = -t47
    t118 = -t48
    t119 = -t51
    t120 = -t52
    t121 = -t55
    t122 = -t56
    t123 = -t59
    t124 = -t60
    t125 = t95 * t95
    t126 = t96 * t96
    t127 = t97 * t97
    t128 = t110 * t110
    t129 = t111 * t111
    t130 = t112 * t112
    t137 = t95 * t111
    t138 = t96 * t110
    t139 = t95 * t112
    t140 = t97 * t110
    t141 = t96 * t112
    t142 = t97 * t111
    t143 = t95 * t110 * 2.0
    t149 = t96 * t111 * 2.0
    t157 = t97 * t112 * 2.0
    t173 = t2 + t9 + t16 + t71 + t74 + t81
    t174 = t4 + t11 + t20 + t72 + t76 + t83
    t175 = t6 + t13 + t24 + t73 + t78 + t85
    t176 = t2 + t15 + t26 + t71 + t80 + t87
    t177 = t4 + t19 + t28 + t72 + t82 + t89
    t178 = t6 + t23 + t30 + t73 + t84 + t91
    t179 = t8 + t15 + t32 + t75 + t80 + t92
    t180 = t10 + t19 + t34 + t77 + t82 + t93
    t181 = t12 + t23 + t36 + t79 + t84 + t94
    t131 = t125 * 2.0
    t132 = t126 * 2.0
    t133 = t127 * 2.0
    t134 = t128 * 2.0
    t135 = t129 * 2.0
    t136 = t130 * 2.0
    t144 = t137 * 2.0
    t145 = t138 * 2.0
    t146 = t137 * 4.0
    t147 = t139 * 2.0
    t148 = t138 * 4.0
    t150 = t140 * 2.0
    t151 = t139 * 4.0
    t152 = t141 * 2.0
    t153 = t140 * 4.0
    t154 = t142 * 2.0
    t155 = t141 * 4.0
    t156 = t142 * 4.0
    t158 = -t138
    t160 = -t140
    t163 = -t142
    t186 = t143 + t149
    t188 = t143 + t157
    t190 = t149 + t157
    t230 = t38 + t41 + t42 + t45 + t46 + t49 + t50 + t53 + t54 + t57 + t58 + t61 + t113 + t114 + t115 + t116 + t117 + t118 + t119 + t120 + t121 + t122 + t123 + t124
    t161 = -t148
    t164 = -t153
    t166 = -t156
    t167 = t131 + t132
    t168 = t131 + t133
    t169 = t132 + t133
    t170 = t134 + t135
    t171 = t134 + t136
    t172 = t135 + t136
    t185 = t137 + t158
    t187 = t139 + t160
    t189 = t141 + t163
    t231 = wp.abs(t230)
    t232 = (t230 / wp.abs(t230))
    t191 = t144 + t161
    t193 = t147 + t164
    t195 = t152 + t166
    t197 = t185 * t185
    t198 = t187 * t187
    t199 = t189 * t189
    t200 = t95 * t185 * 2.0
    t201 = t96 * t185 * 2.0
    t202 = t95 * t187 * 2.0
    t203 = t97 * t187 * 2.0
    t204 = t96 * t189 * 2.0
    t205 = t97 * t189 * 2.0
    t206 = t110 * t185 * 2.0
    t207 = t111 * t185 * 2.0
    t208 = t110 * t187 * 2.0
    t209 = t112 * t187 * 2.0
    t210 = t111 * t189 * 2.0
    t211 = t112 * t189 * 2.0
    t212 = -t205
    t213 = -t211
    t214 = t201 + t203
    t215 = t202 + t204
    t216 = t207 + t209
    t217 = t208 + t210
    t226 = t197 + t198 + t199
    t218 = t200 + t212
    t219 = t206 + t213
    t220 = t214 * t214
    t221 = t215 * t215
    t222 = t216 * t216
    t223 = t217 * t217
    t227 = 1.0 / wp.sqrt(t226)
    t224 = t218 * t218
    t225 = t219 * t219
    t228 = t227 * t227 * t227
    t229 = t227 * t227 * t227 * t227 * t227
    t233 = t95 * t227 * t232
    t234 = t96 * t227 * t232
    t235 = t97 * t227 * t232
    t236 = t98 * t227 * t232
    t237 = t99 * t227 * t232
    t238 = t100 * t227 * t232
    t239 = t101 * t227 * t232
    t241 = t103 * t227 * t232
    t243 = t105 * t227 * t232
    t251 = -t233
    t252 = -t234
    t253 = -t235
    t254 = -t236
    t255 = -t237
    t256 = -t238
    t257 = -t239
    t259 = -t241
    t261 = -t243
    t269 = t95 * t96 * t228 * t231
    t270 = t95 * t97 * t228 * t231
    t271 = t96 * t97 * t228 * t231
    t272 = t110 * t111 * t228 * t231
    t273 = t110 * t112 * t228 * t231
    t274 = t111 * t112 * t228 * t231
    t281 = (t167 * t228 * t231) / 2.0
    t282 = (t168 * t228 * t231) / 2.0
    t283 = (t169 * t228 * t231) / 2.0
    t284 = (t170 * t228 * t231) / 2.0
    t285 = (t171 * t228 * t231) / 2.0
    t286 = (t172 * t228 * t231) / 2.0
    t293 = (t186 * t228 * t231) / 2.0
    t294 = (t188 * t228 * t231) / 2.0
    t295 = (t190 * t228 * t231) / 2.0
    t297 = (t191 * t228 * t231) / 2.0
    t298 = t228 * t231 * (t145 - t146) * (-1.0 / 2.0)
    t300 = (t193 * t228 * t231) / 2.0
    t301 = t228 * t231 * (t150 - t151) * (-1.0 / 2.0)
    t303 = (t195 * t228 * t231) / 2.0
    t304 = t228 * t231 * (t154 - t155) * (-1.0 / 2.0)
    t306 = (t228 * t231 * (t145 - t146)) / 2.0
    t308 = (t228 * t231 * (t150 - t151)) / 2.0
    t310 = (t228 * t231 * (t154 - t155)) / 2.0
    t311 = t220 * t229 * t231 * (3.0 / 4.0)
    t312 = t221 * t229 * t231 * (3.0 / 4.0)
    t313 = t222 * t229 * t231 * (3.0 / 4.0)
    t314 = t223 * t229 * t231 * (3.0 / 4.0)
    t316 = t224 * t229 * t231 * (3.0 / 4.0)
    t319 = t225 * t229 * t231 * (3.0 / 4.0)
    t323 = (t173 * t214 * t228 * t232) / 2.0
    t324 = (t173 * t215 * t228 * t232) / 2.0
    t325 = (t174 * t214 * t228 * t232) / 2.0
    t326 = (t174 * t215 * t228 * t232) / 2.0
    t327 = (t175 * t214 * t228 * t232) / 2.0
    t328 = (t175 * t215 * t228 * t232) / 2.0
    t329 = (t176 * t214 * t228 * t232) / 2.0
    t330 = (t176 * t215 * t228 * t232) / 2.0
    t331 = (t177 * t214 * t228 * t232) / 2.0
    t332 = (t177 * t215 * t228 * t232) / 2.0
    t333 = (t178 * t214 * t228 * t232) / 2.0
    t334 = (t178 * t215 * t228 * t232) / 2.0
    t335 = (t179 * t214 * t228 * t232) / 2.0
    t336 = (t173 * t216 * t228 * t232) / 2.0
    t337 = (t179 * t215 * t228 * t232) / 2.0
    t338 = (t173 * t217 * t228 * t232) / 2.0
    t339 = (t180 * t214 * t228 * t232) / 2.0
    t340 = (t174 * t216 * t228 * t232) / 2.0
    t341 = (t180 * t215 * t228 * t232) / 2.0
    t342 = (t174 * t217 * t228 * t232) / 2.0
    t343 = (t181 * t214 * t228 * t232) / 2.0
    t344 = (t175 * t216 * t228 * t232) / 2.0
    t345 = (t181 * t215 * t228 * t232) / 2.0
    t346 = (t175 * t217 * t228 * t232) / 2.0
    t348 = (t176 * t216 * t228 * t232) / 2.0
    t350 = (t176 * t217 * t228 * t232) / 2.0
    t352 = (t177 * t216 * t228 * t232) / 2.0
    t354 = (t177 * t217 * t228 * t232) / 2.0
    t356 = (t178 * t216 * t228 * t232) / 2.0
    t358 = (t178 * t217 * t228 * t232) / 2.0
    t359 = (t179 * t216 * t228 * t232) / 2.0
    t361 = (t180 * t216 * t228 * t232) / 2.0
    t362 = (t180 * t217 * t228 * t232) / 2.0
    t364 = (t181 * t217 * t228 * t232) / 2.0
    t372 = (t173 * t218 * t228 * t232) / 2.0
    t374 = (t174 * t218 * t228 * t232) / 2.0
    t377 = (t175 * t218 * t228 * t232) / 2.0
    t380 = (t176 * t218 * t228 * t232) / 2.0
    t382 = (t177 * t218 * t228 * t232) / 2.0
    t385 = (t178 * t218 * t228 * t232) / 2.0
    t389 = (t179 * t218 * t228 * t232) / 2.0
    t390 = (t173 * t219 * t228 * t232) / 2.0
    t395 = (t180 * t218 * t228 * t232) / 2.0
    t396 = (t174 * t219 * t228 * t232) / 2.0
    t401 = (t181 * t218 * t228 * t232) / 2.0
    t402 = (t175 * t219 * t228 * t232) / 2.0
    t408 = (t176 * t219 * t228 * t232) / 2.0
    t414 = (t177 * t219 * t228 * t232) / 2.0
    t420 = (t178 * t219 * t228 * t232) / 2.0
    t424 = (t179 * t219 * t228 * t232) / 2.0
    t429 = (t181 * t219 * t228 * t232) / 2.0
    t461 = t214 * t215 * t229 * t231 * (3.0 / 4.0)
    t462 = t214 * t216 * t229 * t231 * (3.0 / 4.0)
    t463 = t214 * t217 * t229 * t231 * (3.0 / 4.0)
    t464 = t215 * t216 * t229 * t231 * (3.0 / 4.0)
    t465 = t215 * t217 * t229 * t231 * (3.0 / 4.0)
    t466 = t216 * t217 * t229 * t231 * (3.0 / 4.0)
    t467 = t214 * t218 * t229 * t231 * (3.0 / 4.0)
    t469 = t215 * t218 * t229 * t231 * (3.0 / 4.0)
    t471 = t214 * t219 * t229 * t231 * (3.0 / 4.0)
    t472 = t216 * t218 * t229 * t231 * (3.0 / 4.0)
    t475 = t217 * t218 * t229 * t231 * (3.0 / 4.0)
    t476 = t215 * t219 * t229 * t231 * (3.0 / 4.0)
    t478 = t216 * t219 * t229 * t231 * (3.0 / 4.0)
    t480 = t217 * t219 * t229 * t231 * (3.0 / 4.0)
    t485 = t218 * t219 * t229 * t231 * (3.0 / 4.0)
    t275 = -t269
    t276 = -t270
    t277 = -t271
    t287 = -t281
    t288 = -t282
    t289 = -t283
    t290 = -t284
    t291 = -t285
    t292 = -t286
    t296 = -t293
    t299 = -t294
    t302 = -t295
    t305 = -t297
    t307 = -t300
    t309 = -t303
    t315 = -t311
    t317 = -t312
    t321 = -t316
    t371 = -t323
    t373 = -t325
    t375 = -t326
    t376 = -t327
    t378 = -t328
    t379 = -t329
    t381 = -t331
    t383 = -t332
    t384 = -t333
    t386 = -t334
    t387 = -t335
    t388 = -t336
    t391 = -t337
    t393 = -t339
    t397 = -t341
    t398 = -t342
    t399 = -t343
    t400 = -t344
    t403 = -t345
    t410 = -t350
    t412 = -t352
    t422 = -t358
    t423 = -t359
    t428 = -t362
    t439 = -t372
    t440 = -t374
    t441 = -t377
    t442 = -t380
    t443 = -t382
    t444 = -t385
    t445 = -t389
    t447 = -t395
    t448 = -t396
    t449 = -t401
    t452 = -t408
    t456 = -t420
    t468 = -t461
    t470 = -t462
    t473 = -t463
    t474 = -t464
    t477 = -t465
    t479 = -t466
    t481 = -t467
    t482 = -t469
    t483 = -t471
    t484 = -t472
    t486 = -t475
    t487 = -t476
    t488 = -t478
    t490 = -t485
    t533 = t255 + t300 + t335 + t346 + t463
    t491 = t281 + t317 + t324 + t330
    t493 = t283 + t315 + t376 + t384
    t496 = t282 + t321 + t440 + t443
    t497 = t270 + t323 + t378 + t468
    t498 = t270 + t329 + t386 + t468
    t499 = t273 + t364 + t423 + t479
    t501 = t271 + t326 + t439 + t469
    t502 = t271 + t332 + t442 + t469
    t503 = t272 + t361 + t429 + t488
    t504 = t274 + t424 + t428 + t480
    t507 = t269 + t373 + t441 + t481
    t508 = t269 + t381 + t444 + t481
    t509 = t293 + t338 + t391 + t477
    t510 = t295 + t343 + t400 + t470
    t511 = t296 + t337 + t410 + t465
    t513 = t302 + t356 + t399 + t462
    t517 = t294 + t395 + t448 + t490
    t518 = t299 + t414 + t447 + t485
    t521 = t234 + t276 + t328 + t379 + t461
    t523 = t235 + t275 + t325 + t385 + t467
    t524 = t252 + t276 + t334 + t371 + t461
    t526 = t233 + t277 + t372 + t383 + t482
    t527 = t253 + t275 + t331 + t377 + t467
    t530 = t251 + t277 + t375 + t380 + t482
    t535 = t238 + t297 + t393 + t402 + t471
    t536 = t237 + t308 + t388 + t403 + t464
    t537 = t259 + t301 + t345 + t348 + t474
    t541 = t243 + t298 + t401 + t412 + t484
    t543 = t241 + t307 + t387 + t422 + t473
    t545 = t239 + t304 + t397 + t452 + t476
    t547 = t236 + t303 + t398 + t445 + t486
    t548 = t257 + t309 + t354 + t389 + t475
    t551 = t256 + t306 + t340 + t449 + t472
    t552 = t254 + t310 + t341 + t390 + t487
    t555 = t261 + t305 + t339 + t456 + t483

    energy_hessian[i1][i1] = energy_hessian[i1][i1] + (wp.mat33(t292 + t313 - t181 * t216 * t228 * t232, t503, t499,
                                       t503, t291 + t319 - t180 * t219 * t228 * t232, t504,
                                       t499, t504, t290 + t314 + t179 * t217 * t228 * t232) * db_dd
                              + wp.outer(dd_dx[i1], dd_dx[i1]) * d2b_dd2) * kappa
    energy_hessian[i1][i2] = energy_hessian[i1][i2] +(wp.mat33(t513, t541, t537,
                                       t555, t518, t545,
                                       t543, t548, t511) * db_dd
                              + wp.outer(dd_dx[i1], dd_dx[i2]) * d2b_dd2) * kappa
    energy_hessian[i1][i3] = energy_hessian[i1][i3] + (wp.mat33(t510, t551, t536, t535, t517, t552, t533, t547, t509) * db_dd
                              + wp.outer(dd_dx[i1], dd_dx[i3]) * d2b_dd2) * kappa
    energy_hessian[i2][i1] = energy_hessian[i2][i1] + (wp.mat33(t513, t555, t543,
                                       t541, t518, t548,
                                       t537, t545, t511) * db_dd
                              + wp.outer(dd_dx[i2], dd_dx[i1]) * d2b_dd2) * kappa
    energy_hessian[i2][i2] = energy_hessian[i2][i2] + (wp.mat33(t289 + t311 + t178 * t214 * t228 * t232, t508, t498,
                                       t508, t288 + t316 + t177 * t218 * t228 * t232, t502,
                                       t498, t502, t287 + t312 - t176 * t215 * t228 * t232) * db_dd
                              + wp.outer(dd_dx[i2], dd_dx[i2]) * d2b_dd2) * kappa
    energy_hessian[i2][i3] = energy_hessian[i2][i3] + (wp.mat33(t493, t523, t524,
                                       t527, t496, t526,
                                       t521, t530, t491) * db_dd
                              + wp.outer(dd_dx[i2], dd_dx[i3]) * d2b_dd2) * kappa
    energy_hessian[i3][i3] = energy_hessian[i3][i3] + (wp.mat33(t289 + t311 + t175 * t214 * t228 * t232, t507,
                                       t497, t507, t288 + t316 + t174 * t218 * t228 * t232,
                                       t501, t497, t501, t287 + t312 - t173 * t215 * t228 * t232) * db_dd
                              + wp.outer(dd_dx[i3], dd_dx[i3]) * d2b_dd2) * kappa

    energy_hessian[i2][i1] = wp.transpose(energy_hessian[i1][i2])
    energy_hessian[i3][i1] = wp.transpose(energy_hessian[i1][i3])
    energy_hessian[i3][i2] = wp.transpose(energy_hessian[i2][i3])

    energy_hessian[i0][i1] = - energy_hessian[i1][i1] - energy_hessian[i2][i1] - energy_hessian[i3][i1]
    energy_hessian[i0][i2] = - energy_hessian[i1][i2] - energy_hessian[i2][i2] - energy_hessian[i3][i2]
    energy_hessian[i0][i3] = - energy_hessian[i1][i3] - energy_hessian[i2][i3] - energy_hessian[i3][i3]

    energy_hessian[i1][i0] = wp.transpose(energy_hessian[i0][i1])
    energy_hessian[i2][i0] = wp.transpose(energy_hessian[i0][i2])
    energy_hessian[i3][i0] = wp.transpose(energy_hessian[i0][i3])

    energy_hessian[i0][i0] = - energy_hessian[i0][i1] - energy_hessian[i0][i2] - energy_hessian[i0][i3]
